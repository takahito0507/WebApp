"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.localeWeek = localeWeek;
exports.localeFirstDayOfWeek = localeFirstDayOfWeek;
exports.localeFirstDayOfYear = localeFirstDayOfYear;
exports.getSetWeek = getSetWeek;
exports.getSetISOWeek = getSetISOWeek;
exports.defaultLocaleWeek = void 0;

var _format = require("../format/format");

var _aliases = require("./aliases");

var _priorities = require("./priorities");

var _regex = require("../parse/regex");

var _token = require("../parse/token");

var _toInt = _interopRequireDefault(require("../utils/to-int"));

var _local = require("../create/local");

var _weekCalendarUtils = require("./week-calendar-utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

// FORMATTING
(0, _format.addFormatToken)('w', ['ww', 2], 'wo', 'week');
(0, _format.addFormatToken)('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES

(0, _aliases.addUnitAlias)('week', 'w');
(0, _aliases.addUnitAlias)('isoWeek', 'W'); // PRIORITIES

(0, _priorities.addUnitPriority)('week', 5);
(0, _priorities.addUnitPriority)('isoWeek', 5); // PARSING

(0, _regex.addRegexToken)('w', _regex.match1to2);
(0, _regex.addRegexToken)('ww', _regex.match1to2, _regex.match2);
(0, _regex.addRegexToken)('W', _regex.match1to2);
(0, _regex.addRegexToken)('WW', _regex.match1to2, _regex.match2);
(0, _token.addWeekParseToken)(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
  week[token.substr(0, 1)] = (0, _toInt["default"])(input);
}); // HELPERS
// LOCALES

function localeWeek(mom) {
  return (0, _weekCalendarUtils.weekOfYear)(mom, this._week.dow, this._week.doy).week;
}

var defaultLocaleWeek = {
  dow: 0,
  // Sunday is the first day of the week.
  doy: 6 // The week that contains Jan 6th is the first week of the year.

};
exports.defaultLocaleWeek = defaultLocaleWeek;

function localeFirstDayOfWeek() {
  return this._week.dow;
}

function localeFirstDayOfYear() {
  return this._week.doy;
} // MOMENTS


function getSetWeek(input) {
  var week = this.localeData().week(this);
  return input == null ? week : this.add((input - week) * 7, 'd');
}

function getSetISOWeek(input) {
  var week = (0, _weekCalendarUtils.weekOfYear)(this, 1, 4).week;
  return input == null ? week : this.add((input - week) * 7, 'd');
}