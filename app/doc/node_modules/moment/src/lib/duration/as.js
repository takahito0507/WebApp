"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.as = as;
exports.valueOf = valueOf;
exports.asYears = exports.asQuarters = exports.asMonths = exports.asWeeks = exports.asDays = exports.asHours = exports.asMinutes = exports.asSeconds = exports.asMilliseconds = void 0;

var _bubble = require("./bubble");

var _aliases = require("../units/aliases");

var _toInt = _interopRequireDefault(require("../utils/to-int"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function as(units) {
  if (!this.isValid()) {
    return NaN;
  }

  var days;
  var months;
  var milliseconds = this._milliseconds;
  units = (0, _aliases.normalizeUnits)(units);

  if (units === 'month' || units === 'quarter' || units === 'year') {
    days = this._days + milliseconds / 864e5;
    months = this._months + (0, _bubble.daysToMonths)(days);

    switch (units) {
      case 'month':
        return months;

      case 'quarter':
        return months / 3;

      case 'year':
        return months / 12;
    }
  } else {
    // handle milliseconds separately because of floating point math errors (issue #1867)
    days = this._days + Math.round((0, _bubble.monthsToDays)(this._months));

    switch (units) {
      case 'week':
        return days / 7 + milliseconds / 6048e5;

      case 'day':
        return days + milliseconds / 864e5;

      case 'hour':
        return days * 24 + milliseconds / 36e5;

      case 'minute':
        return days * 1440 + milliseconds / 6e4;

      case 'second':
        return days * 86400 + milliseconds / 1000;
      // Math.floor prevents floating point math errors here

      case 'millisecond':
        return Math.floor(days * 864e5) + milliseconds;

      default:
        throw new Error('Unknown unit ' + units);
    }
  }
} // TODO: Use this.as('ms')?


function valueOf() {
  if (!this.isValid()) {
    return NaN;
  }

  return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + (0, _toInt["default"])(this._months / 12) * 31536e6;
}

function makeAs(alias) {
  return function () {
    return this.as(alias);
  };
}

var asMilliseconds = makeAs('ms');
exports.asMilliseconds = asMilliseconds;
var asSeconds = makeAs('s');
exports.asSeconds = asSeconds;
var asMinutes = makeAs('m');
exports.asMinutes = asMinutes;
var asHours = makeAs('h');
exports.asHours = asHours;
var asDays = makeAs('d');
exports.asDays = asDays;
var asWeeks = makeAs('w');
exports.asWeeks = asWeeks;
var asMonths = makeAs('M');
exports.asMonths = asMonths;
var asQuarters = makeAs('Q');
exports.asQuarters = asQuarters;
var asYears = makeAs('y');
exports.asYears = asYears;